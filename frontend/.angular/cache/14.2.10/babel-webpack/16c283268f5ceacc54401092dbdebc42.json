{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Mister/Desktop/art-workshop-website/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./users.service\";\nexport class AuthService {\n  constructor(service) {\n    this.service = service;\n    this.loggedin = false;\n    this.init().then(() => {\n      console.log('AuthService initialization finished');\n    });\n  }\n\n  init() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.refresh();\n    })();\n  }\n\n  getUser() {\n    return this.user;\n  }\n\n  refresh() {\n    this.service.getSessionUser().subscribe(resp => {\n      if (resp['error']) {\n        this.loggedin = false;\n        this.user = null;\n      } else {\n        this.user = {\n          firstname: resp.firstname,\n          lastname: resp.lastname,\n          username: resp.username,\n          phone: resp.phone,\n          email: resp.email,\n          type: resp.type,\n          profilePicture: resp.profilePicture,\n          verified: resp.verified,\n          org: resp.org\n        };\n        console.log(\"Local user data: \");\n        console.log(this.user);\n        this.loggedin = true;\n      }\n    });\n  }\n\n  login(username, password) {\n    this.service.login(username, password).subscribe(resp => {\n      this.refresh();\n    });\n  }\n\n  logout() {\n    this.service.logout().subscribe(resp => {\n      this.loggedin = false;\n      this.user = null;\n    });\n  }\n\n  isLoggedIn() {\n    console.log(\"Logged in: \" + this.loggedin);\n    return this.loggedin;\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.UsersService));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,WAAP,CAAkB;EACtBC,YAAoBC,OAApB,EAAyC;IAArB;IAUZ,gBAAW,KAAX;IATN,KAAKC,IAAL,GAAYC,IAAZ,CAAiB,MAAK;MACpBC,OAAO,CAACC,GAAR,CAAY,qCAAZ;IACD,CAFD;EAGD;;EAEaH,IAAI;IAAA;;IAAA;MAChB,MAAM,KAAI,CAACI,OAAL,EAAN;IADgB;EAEjB;;EAKMC,OAAO;IACZ,OAAO,KAAKC,IAAZ;EACD;;EACMF,OAAO;IACZ,KAAKL,OAAL,CAAaQ,cAAb,GAA8BC,SAA9B,CAAyCC,IAAD,IAAc;MACpD,IAAGA,IAAI,CAAC,OAAD,CAAP,EAAiB;QACf,KAAKC,QAAL,GAAgB,KAAhB;QACA,KAAKJ,IAAL,GAAY,IAAZ;MACD,CAHD,MAII;QACF,KAAKA,IAAL,GAAY;UACVK,SAAS,EAAEF,IAAI,CAACE,SADN;UAEVC,QAAQ,EAAEH,IAAI,CAACG,QAFL;UAGVC,QAAQ,EAAEJ,IAAI,CAACI,QAHL;UAIVC,KAAK,EAAEL,IAAI,CAACK,KAJF;UAKVC,KAAK,EAAEN,IAAI,CAACM,KALF;UAMVC,IAAI,EAAEP,IAAI,CAACO,IAND;UAOVC,cAAc,EAAER,IAAI,CAACQ,cAPX;UAQVC,QAAQ,EAAET,IAAI,CAACS,QARL;UASVC,GAAG,EAAEV,IAAI,CAACU;QATA,CAAZ;QAWAjB,OAAO,CAACC,GAAR,CAAY,mBAAZ;QACAD,OAAO,CAACC,GAAR,CAAY,KAAKG,IAAjB;QACA,KAAKI,QAAL,GAAgB,IAAhB;MACD;IACF,CArBD;EAsBD;;EACDU,KAAK,CAACP,QAAD,EAAmBQ,QAAnB,EAAmC;IACtC,KAAKtB,OAAL,CAAaqB,KAAb,CAAmBP,QAAnB,EAA6BQ,QAA7B,EAAuCb,SAAvC,CAAkDC,IAAD,IAAc;MAC7D,KAAKL,OAAL;IACD,CAFD;EAGD;;EAEDkB,MAAM;IACJ,KAAKvB,OAAL,CAAauB,MAAb,GAAsBd,SAAtB,CAAiCC,IAAD,IAAc;MAC5C,KAAKC,QAAL,GAAgB,KAAhB;MACA,KAAKJ,IAAL,GAAY,IAAZ;IACD,CAHD;EAID;;EAEDiB,UAAU;IACRrB,OAAO,CAACC,GAAR,CAAY,gBAAgB,KAAKO,QAAjC;IACA,OAAO,KAAKA,QAAZ;EACD;;AAzDqB;;;mBAAXb,aAAW2B;AAAA;;;SAAX3B;EAAW4B,SAAX5B,WAAW;EAAA6B,YAFV","names":["AuthService","constructor","service","init","then","console","log","refresh","getUser","user","getSessionUser","subscribe","resp","loggedin","firstname","lastname","username","phone","email","type","profilePicture","verified","org","login","password","logout","isLoggedIn","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Mister\\Desktop\\art-workshop-website\\frontend\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { User } from '../models/user';\r\nimport { UsersService } from './users.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  constructor(private service: UsersService) { \r\n    this.init().then(() => {\r\n      console.log('AuthService initialization finished');\r\n    });\r\n  }\r\n\r\n  private async init(): Promise<void> {\r\n    await this.refresh();\r\n  }\r\n\r\n  private loggedin = false;\r\n  private user: User;\r\n\r\n  public getUser(): User {\r\n    return this.user;\r\n  }\r\n  public refresh(): void {\r\n    this.service.getSessionUser().subscribe((resp: any) => {\r\n      if(resp['error']){\r\n        this.loggedin = false;\r\n        this.user = null;\r\n      }\r\n      else{\r\n        this.user = {\r\n          firstname: resp.firstname,\r\n          lastname: resp.lastname,\r\n          username: resp.username,\r\n          phone: resp.phone,\r\n          email: resp.email,\r\n          type: resp.type,\r\n          profilePicture: resp.profilePicture,\r\n          verified: resp.verified,\r\n          org: resp.org\r\n        };\r\n        console.log(\"Local user data: \")\r\n        console.log(this.user)\r\n        this.loggedin = true;\r\n      }\r\n    });\r\n  }\r\n  login(username: string, password: string) {\r\n    this.service.login(username, password).subscribe((resp: any) => {\r\n      this.refresh();\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.service.logout().subscribe((resp: any) => {\r\n      this.loggedin = false;\r\n      this.user = null;\r\n    });\r\n  }\r\n\r\n  isLoggedIn() {\r\n    console.log(\"Logged in: \" + this.loggedin)\r\n    return this.loggedin;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}